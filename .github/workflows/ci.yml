name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  code-format-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install clang-format
        run: sudo apt-get install -y clang-format
        
      - name: Run clang-format
        run: |
          find . -name '*.cpp' -o -name '*.h' | xargs clang-format -i

  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-11, g++-12, g++-13, clang++-15, clang++-16]

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        if [[ "${{ matrix.compiler }}" == clang* ]]; then
          sudo apt-get install -y cmake clang lldb lld
        else
          sudo apt-get install -y cmake ${{ matrix.compiler }} valgrind
        fi

    - name: Set compiler
      run: |
        if [[ "${{ matrix.compiler }}" == clang* ]]; then
          export CXX=${{ matrix.compiler }}
        else
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/${{ matrix.compiler }} 100
          export CXX=${{ matrix.compiler }}
        fi
        echo "CXX=$CXX" >> $GITHUB_ENV

    - name: Configure with cmake
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=$CXX

    - name: Build project
      run: cmake --build build -j$(nproc)

    - name: Run unit tests
      run: cd build && ./launch

  valgrind-check:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ valgrind

    - name: Configure and build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug
        cmake --build . -j$(nproc)

    - name: Run memory check
      run: cd build && valgrind --error-exitcode=1 ./launch
